
////////////////////////////////////////////////////////////////////////////////////////
//                                                                                    //
//                    UI  LIBRARY  LEGEND                                             //
//                                                                                    //
////////////////////////////////////////////////////////////////////////////////////////

// usage: /toggleUI "name" MILLIS ACTION <FORCE-STATE>
toggleUI = [
    local idxWindow idxState curState
    nodebug [ idxWindow = (indexof $uiAnimWindows $arg1) ]

    if (> $idxWindow -1) [
        idxState = (+ $idxWindow 1)
        curState = (at $uiAnimWindows $idxState)
        if (&& [> $numargs 3] [= $arg4 $curState]) [] [
            if $arg2 [] [ arg2 = $uiWindowSpeed ]
            [.@arg1.timestamp] = $getmillis
            [.@arg1.duration]  = $arg2
            [.@arg1.progress]  = (% (*f $arg2 $[.@arg1.opacity]) -100)
            if $curState [ [.@arg1.progress] = (+ $arg2 $[.@arg1.progress]) ]
            listsplice= uiAnimWindows (! $curState) $idxState 1
        ]
    ] [
        if $arg2 [] [ arg2 = $uiWindowSpeed ]
        [.@arg1.timestamp] = $getmillis
        [.@arg1.duration]  = $arg2
        if (> $numargs 3) [
            if (!= $arg4 (uivisible $arg1)) [
                append uiAnimWindows $arg1
                append uiAnimWindows $arg4
            ]
        ] [
            arg4 = (! (uivisible $arg1))
            append uiAnimWindows $arg1
            append uiAnimWindows $arg4
        ]
        if $arg4 [ showui $arg1 ]
    ]
]

// usage: /enableUI "name" MILLIS <force-state>
enableUI  = [ toggleUI $arg1 $arg2 $arg3 1 ]

// usage: /disableUI "name" MILLIS <force-state>
disableUI = [ toggleUI $arg1 $arg2 $arg3 0 ]

// controls opacity percentage of given color
// usage: 0xAARRGGBB
|f = [
    if (!= $(+s . $uiname .opacity) 1) [
        arg2 = (& (>> $arg1 24) 0xFF)
        if $arg2 [
            | (<< (ceil (*f $(+s . $uiname .opacity) $arg2)) 24) (& $arg1 0xFFFFFF)
        ] [ | (<< (ceil (*f $(+s . $uiname .opacity)  0xFF)) 24)    $arg1 ]
    ] [ result $arg1 ]
]

// TexCMD Fade-Multiply combo function
// usage: alpha(0-1) 0xRRGGBB
ifm = [
    arg1 = (*f $arg1 $[.@uiname.opacity])
    arg1 = (+s < fade: (round $arg1 0.1) >)
    if (> $numargs 1) [
        arg2 = (+s < intmul: (+ $arg2) >)
    ] ; +s $arg1 $arg2
]

////////////////////////////////////////////////////////////////////////////////////////

uiWindow = [
    newui $arg1 [
        uieschide 0
        @arg5
        if $uiInputOOB [
            uieschide 0
            uipress    [ uiCleanKB ]
            uiescpress [ uiCleanKB ]
        ]
        uivlist 0 [
            @@(? $arg6 [
                uicolor (|f 0xEE181818) 0 0 [
                    uiFastImgStretched (ifm 0.5) "shadow2" "" "" [] $uiPad:6XL
                    uiclamp*e ; @@arg6
                ]
            ])
            uicolor (|f 0xEE202020) 0.01 0.01 [
                uiFastImgTiled (ifm 1 0) "ui/" "ui_bg0"
                uiFastImgStretched (ifm 0.5) "shadow3" "" "" [] $uiPad:M
                uispace $uiPad:L $uiPad:L [ @@@@arg2 ] ; uiclamp*e
            ] ; uiclamp*x
        ]
        uioutline (|f 0xEE181818)
        uiclamp*e
    ] [
        uiSetBgBlur 1
        uiSetMillis @arg1
        uiSetLanguage @arg1
        @arg3
    ] [
        uiSetMillis @arg1
        uiSetBgBlur -1
        if (=s $.UI_KBthisui @arg1) [ uiCleanKB ]
        @arg4
    ]
]

uiText          = [ uicolortext $arg1 (|f 0xFFFFFF) $arg2 ]
uiColorText     = [ uicolortext $arg1 (|f $arg3)    $arg2 ]
uiFontText      = [ uifont $arg1 [ uiText      $arg2 $arg3       ] ]
uiFontColorText = [ uifont $arg1 [ uiColorText $arg2 $arg3 $arg4 ] ]

uiBarH = [
    if (< $numargs 3) [
        arg3 = (|f $c_line1)
    ] [ arg3 = (|f $arg3) ]
    if (|| $arg1 $arg2) [
        uispace $arg1 $arg2 [
            uiline $arg3 ; uiclamp-x
        ] ; uiclamp-x
    ] [ uiline $arg3 ; uiclamp-x ]
]

uiBarV = [
    if (< $numargs 3) [
        arg3 = (|f $c_line1)
    ] [ arg3 = (|f $arg3) ]
    if (|| $arg1 $arg2) [
        uispace $arg1 $arg2 [
            uiline $arg3 ; uiclamp-y
        ] ; uiclamp-y
    ] [ uiline $arg3 ; uiclamp-y ]
]

uiWindow "test1" [
    uivlist $uiPad:3XL [
        uiSliderH uiscale 0.5 1.5 0.1 [] [ +s (+ (% $$arg1 1)) "%" ] ; uiclamp-x
        uicolor (|f 0x404040) 0 0.2 [
            uiFontColorText "wide" "SCALE" 3 0x202020
            uiFontText "wide" "TESTING" 0.8 -1
            uioutline (|f 0xFF0000) ; uiclamp-e
        ]
    ]
] [] [] [] [ uiText "TEST" 0.8 ]

////////////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////////////

// uiHorSld VAR MIN MAX STEP [ on-change ] [ label formatting ] X Y [ pulse trigger cond ]
uiSliderH = [
    if $arg7 [] [ arg7 = $uiPad:5XL ]
    if $arg8 [] [ arg8 = $uiPad:5XL ]
    if $arg6 [ arg6 = (do $arg6) ] [ arg6 = $$arg1 ]
    if $arg9 [ arg9 = (do $arg9) ] [ arg9 = (|| uihover+? uihold+?) ]
    uitarget $arg7 $arg8 [
        uiHoverOnce [ uiHoverSound ]
        uiSetScrollLock 1
        uihslider $arg1 $arg2 $arg3 $arg4 [ doargs $arg5 ] [
            uihlist 0 [
                loop n 31 [
                    uiBarV 0 (*f $arg8 (? (mod $n 5) 0.175 0.05)) $c_cb0
                ]
            ] ; uiclamp-e
            uiBarH 0 0 $c_cb0
            uisliderbutton [
                if (<=f $arg2 $$arg1 $arg3) [
                    uicolor (|f $c_main1) 0 0 [
                        uioutline (|f $c_main1)
                        uiFastImgTiled <mad:0/0/0> "ui/" "ui_bg2" "" [ uiclamp.e ]
                        uiFastImgStretched "" "shadow2" "" "" [ uiclamp.x ]
                        uiclamp*e
                        if $arg9 [ arg10 = 0xA0FFFFFF ] [ arg10 = 0x60FFFFFF ]
                        uifontoutline 1 0xFF [
                            uiFontColorText "default" $arg6 0.65 $arg10
                        ]
                    ] ; uiclamp-y
                ]
            ] ; uiclamp-y
        ] ; uiclamp-e
    ]
]


